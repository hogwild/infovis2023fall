
@import url(//fonts.googleapis.com/css?family=PT+Serif|PT+Serif:b|PT+Serif:i|PT+Sans|PT+Sans:b);

html {
  min-width: 1040px;
}

body {
  padding-top: 60px; /* Adjust this value based on the actual height of your header */
  display: flex;
  flex-direction: row;
  align-items: stretch;
}

header {
  position: fixed; /* Fix the position at the top */
  width: 100%; /* Header spans the full width of the viewport */
  top: 0; /* Align to the top */
  left: 0; /* Align to the left */
  z-index: 1000; /* Ensure it's above other content */
  background-color: #fff; /* Optional: Background color for visibility */
  -webkit-box-shadow: 2px 4px 5px -3px rgba(0,0,0,0.37);
  -moz-box-shadow: 2px 4px 5px -3px rgba(0,0,0,0.37);
  box-shadow: 2px 4px 5px -3px rgba(0,0,0,0.37);
}

header h1 {
  padding: 0px;
  margin:5px;
  margin-left: 15px;
  font-size: 30px;
  font-family: "Lato";
  font-weight: bold;
  font-style: normal;
}
#three_container {
  position: relative;
}

#bar_container {
  display: flex; /* Use flexbox inside bar_container */
  flex-direction: column; /* Arrange children vertically */
  flex-grow: 1; /* Allows the container to grow and fill available space */
  /* Other styles as required */
}

.ocks-org body {
  background: #fcfcfa;
  color: #333;
  font-family: "PT Serif", serif;
  margin: 1em auto 4em auto;
  position: relative;
  width: 960px;
}

.ocks-org header,
.ocks-org footer,
.ocks-org aside,
.ocks-org h1,
.ocks-org h2,
.ocks-org h3,
.ocks-org h4 {
  font-family: "PT Sans", sans-serif;
}

.ocks-org h1,
.ocks-org h2,
.ocks-org h3,
.ocks-org h4 {
  color: #000;
}

.ocks-org header,
.ocks-org footer {
  color: #636363;
}

h1 {
  font-size: 64px;
  letter-spacing: -2px;
  margin: .3em 0 .1em 0;
}

h2 {
  margin-top: 2em;
}

h1, h2 {
  text-rendering: optimizeLegibility;
}

h2 a[name],
h2 a[id] {
  color: #ccc;
  right: 100%;
  padding: 0 .3em;
  position: absolute;
}

header,
footer {
  font-size: small;
}

.ocks-org header aside,
.ocks-org footer aside {
  float: left;
  margin-right: .5em;
}

.ocks-org header aside:after,
.ocks-org footer aside:after {
  padding-left: .5em;
  content: "/";
}

footer {
  margin-top: 8em;
}

h1 ~ aside {
  font-size: small;
  right: 0;
  position: absolute;
  width: 180px;
}

.attribution {
  font-size: small;
  margin-bottom: 2em;
}

body > p, li > p {
  line-height: 1.5em;
}

body > p {
  width: 720px;
}

body > blockquote {
  width: 640px;
}

blockquote q {
  display: block;
  font-style: oblique;
}

ul {
  padding: 0;
}

li {
  width: 690px;
  margin-left: 30px;
}

a {
  color: steelblue;
}

a:not(:hover) {
  text-decoration: none;
}

pre, code, textarea {
  font-family: "Menlo", monospace;
}

code {
  line-height: 1em;
}

textarea {
  font-size: 100%;
}

body > pre {
  border-left: solid 2px #ccc;
  padding-left: 18px;
  margin: 2em 0 2em -20px;
}

.html .value,
.javascript .string,
.javascript .regexp {
  color: #756bb1;
}

.html .tag,
.css .tag,
.javascript .keyword {
  color: #3182bd;
}

.comment {
  color: #636363;
}

.html .doctype,
.javascript .number {
  color: #31a354;
}

.html .attribute,
.css .attribute,
.javascript .class,
.javascript .special {
  color: #e6550d;
}

svg {
  font: 10px sans-serif;
}

.axis path, .axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

sup, sub {
  line-height: 0;
}

q:before {
  content: "“";
}

q:after {
  content: "”";
}

blockquote q {
  line-height: 1.5em;
  display: inline;
}

blockquote q:before,
blockquote q:after {
  content: "";
}

#circle circle {
  fill: none;
  pointer-events: all;
}

.group path {
  fill-opacity: .5;
}

path.chord {
  stroke: #000;
  stroke-width: .25px;
}

#circle:hover path.fade {
  display: none;
}

/* Card-like styling for the three_container element */
.card {

  width: 800px; /* Set width to 500px */
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
  margin: 10px; /* Add some margin */
  padding: 10px; /* Add some padding */
  background-color: white; /* Optional: Set a background color */
  border-radius: 5px; /* Optional: Rounded corners */
}

@media screen and (max-width: 768px) {
  .main-content {
      flex-direction: column;
  }

  .left-content, #bar_container {
      width: 100%; /* Full width on smaller screens */
  }
}

.main-content {
  display: flex;
  justify-content: space-between; /* Aligns children (left and right content) on opposite sides */
  padding-top: 0px; /* Adjust as needed, considering the fixed header */
}

.left-content {
  width: calc(100% - [WidthOfBarContainer]); /* Adjust this width as needed */
  /* Additional styling as required */
}